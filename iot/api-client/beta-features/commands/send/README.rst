.. This file is automatically generated. Do not edit this file directly.

Google Cloud IoT Core Python Samples
===============================================================================

.. image:: https://gstatic.com/cloudssh/images/open-btn.png
   :target: https://console.cloud.google.com/cloudshell/open?git_repo=https://github.com/GoogleCloudPlatform/python-docs-samples&page=editor&open_in_editor=/README.rst


This directory contains samples for Google Cloud IoT Core. `Google Cloud IoT Core`_ allows developers to easily integrate Publish and Subscribe functionality with devices and programmatically manage device authorization.




.. _Google Cloud IoT Core: https://cloud.google.com/vision/docs

Setup
-------------------------------------------------------------------------------


Authentication
++++++++++++++

This sample requires you to have authentication setup. Refer to the
`Authentication Getting Started Guide`_ for instructions on setting up
credentials for applications.

.. _Authentication Getting Started Guide:
    https://cloud.google.com/docs/authentication/getting-started

Install Dependencies
++++++++++++++++++++

#. Clone python-docs-samples and change directory to the sample directory you want to use.

    .. code-block:: bash

        $ git clone https://github.com/GoogleCloudPlatform/python-docs-samples.git

#. Install `pip`_ and `virtualenv`_ if you do not already have them. You may want to refer to the `Python Development Environment Setup Guide`_ for Google Cloud Platform for instructions.

   .. _Python Development Environment Setup Guide:
       https://cloud.google.com/python/setup

#. Create a virtualenv. Samples are compatible with Python 2.7 and 3.4+.

    .. code-block:: bash

        $ virtualenv env
        $ source env/bin/activate

#. Install the dependencies needed to run the samples.

    .. code-block:: bash

        $ pip install -r requirements.txt

.. _pip: https://pip.pypa.io/
.. _virtualenv: https://virtualenv.pypa.io/

Samples
-------------------------------------------------------------------------------

Command sender
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

.. image:: https://gstatic.com/cloudssh/images/open-btn.png
   :target: https://console.cloud.google.com/cloudshell/open?git_repo=https://github.com/GoogleCloudPlatform/python-docs-samples&page=editor&open_in_editor=/send.py,/README.rst




To run this sample:

.. code-block:: bash

    $ python send.py

    usage: send.py [-h] --registry_id REGISTRY_ID --device_id DEVICE_ID
                   --send_command SEND_COMMAND [--cloud_region CLOUD_REGION]
                   [--project_id PROJECT_ID]
                   [--service_account_json SERVICE_ACCOUNT_JSON]
                   {send-command} ...

    Example of using the Google Cloud IoT Core device manager to administer
    devices.

    Usage example:

        python send.py \
          --device_id=your-device-id \
          --project_id=your-project-id \
          --send_command="Command to send" \
          --registry_id=your-registry-id \
          --service_account_json=/path/to/your/service_account.json \
          send-command

    positional arguments:
      {send-command}
        send-command        Send a command to a device.

    optional arguments:
      -h, --help            show this help message and exit
      --registry_id REGISTRY_ID
                            Registry id. If not set, a name will be generated.
      --device_id DEVICE_ID
                            Device id.
      --send_command SEND_COMMAND
                            The command sent to the device
      --cloud_region CLOUD_REGION
                            GCP cloud region
      --project_id PROJECT_ID
                            GCP cloud project name.
      --service_account_json SERVICE_ACCOUNT_JSON
                            Path to service account json file.





.. _Google Cloud SDK: https://cloud.google.com/sdk/